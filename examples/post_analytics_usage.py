# examples/post_analytics_usage.py
"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è PostAnalyticsService
"""

import asyncio
from datetime import datetime, timedelta

from database import get_session
from database.unit_of_work import UnitOfWork
from database.models import PostStatus


async def track_post_interactions():
    """–ü—Ä–∏–º–µ—Ä –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π —Å –ø–æ—Å—Ç–æ–º"""
    async with get_session() as session:
        uow = UnitOfWork(session)
        
        post_id = 1
        group_id = -1001234567890
        
        # –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        await uow.post_analytics_service.track_view(post_id, group_id)
        print(f"–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å—Ç–∞ {post_id} –≤ –≥—Ä—É–ø–ø–µ {group_id} –æ—Ç—Å–ª–µ–∂–µ–Ω")
        
        # –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–ª–∏–∫–∞
        await uow.post_analytics_service.track_click(post_id, group_id)
        print(f"–ö–ª–∏–∫ –ø–æ –ø–æ—Å—Ç—É {post_id} –≤ –≥—Ä—É–ø–ø–µ {group_id} –æ—Ç—Å–ª–µ–∂–µ–Ω")
        
        # –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–µ–ø–æ—Å—Ç–∞
        await uow.post_analytics_service.track_share(post_id, group_id)
        print(f"–†–µ–ø–æ—Å—Ç –ø–æ—Å—Ç–∞ {post_id} –≤ –≥—Ä—É–ø–ø–µ {group_id} –æ—Ç—Å–ª–µ–∂–µ–Ω")
        
        # –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π
        await uow.post_analytics_service.track_reaction(post_id, group_id, "üëç")
        await uow.post_analytics_service.track_reaction(post_id, group_id, "‚ù§Ô∏è")
        await uow.post_analytics_service.track_reaction(post_id, group_id, "üëç")  # –ï—â–µ –æ–¥–∏–Ω –ª–∞–π–∫
        print(f"–†–µ–∞–∫—Ü–∏–∏ –Ω–∞ –ø–æ—Å—Ç {post_id} –≤ –≥—Ä—É–ø–ø–µ {group_id} –æ—Ç—Å–ª–µ–∂–µ–Ω—ã")
        
        # –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
        await uow.post_analytics_service.track_view_duration(post_id, group_id, 45)
        print(f"–í—Ä–µ–º—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Å—Ç–∞ {post_id} –≤ –≥—Ä—É–ø–ø–µ {group_id} –æ—Ç—Å–ª–µ–∂–µ–Ω–æ")
        
        await uow.commit()


async def get_post_analytics_example():
    """–ü—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ –ø–æ—Å—Ç—É"""
    async with get_session() as session:
        uow = UnitOfWork(session)
        
        post_id = 1
        
        # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–æ –ø–æ—Å—Ç—É
        analytics = await uow.post_analytics_service.get_post_analytics(post_id)
        
        print(f"\n=== –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Å—Ç–∞ {post_id} ===")
        print(f"–í—Å–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {analytics['total_views']}")
        print(f"–í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤: {analytics['total_clicks']}")
        print(f"–í—Å–µ–≥–æ —Ä–µ–ø–æ—Å—Ç–æ–≤: {analytics['total_shares']}")
        print(f"–†–µ–∞–∫—Ü–∏–∏: {analytics['total_reactions']}")
        print(f"–°—Ä–µ–¥–Ω–∏–π CTR: {analytics['average_ctr']}%")
        print(f"–°—Ä–µ–¥–Ω—è—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: {analytics['average_engagement']}%")
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø: {analytics['groups_count']}")
        
        print("\n–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º:")
        for group_data in analytics['by_groups']:
            print(f"  –ì—Ä—É–ø–ø–∞ {group_data['group_id']}:")
            print(f"    –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {group_data['views']}")
            print(f"    –ö–ª–∏–∫–∏: {group_data['clicks']}")
            print(f"    –†–µ–ø–æ—Å—Ç—ã: {group_data['shares']}")
            print(f"    –†–µ–∞–∫—Ü–∏–∏: {group_data['reactions']}")
            print(f"    CTR: {group_data['ctr']}%")
            print(f"    –í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: {group_data['engagement']}%")


async def get_analytics_summary_example():
    """–ü—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–¥–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥"""
    async with get_session() as session:
        uow = UnitOfWork(session)
        
        # –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        date_to = datetime.now()
        date_from = date_to - timedelta(days=7)
        
        summary = await uow.post_analytics_service.get_analytics_summary(date_from, date_to)
        
        print(f"\n=== –°–≤–æ–¥–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ ===")
        print(f"–ü–µ—Ä–∏–æ–¥: {summary['period']['from']} - {summary['period']['to']}")
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤: {summary['posts_count']}")
        print(f"–í—Å–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {summary['total_views']}")
        print(f"–í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤: {summary['total_clicks']}")
        print(f"–í—Å–µ–≥–æ —Ä–µ–ø–æ—Å—Ç–æ–≤: {summary['total_shares']}")
        print(f"–†–µ–∞–∫—Ü–∏–∏: {summary['total_reactions']}")
        print(f"–°—Ä–µ–¥–Ω–∏–π CTR: {summary['average_ctr']}%")
        print(f"–°—Ä–µ–¥–Ω—è—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: {summary['average_engagement']}%")
        
        print("\n–¢–æ–ø-10 –ø–æ—Å—Ç–æ–≤ –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º:")
        for i, post in enumerate(summary['top_posts'], 1):
            print(f"  {i}. –ü–æ—Å—Ç {post['post_id']} - {post['title'][:50]}...")
            print(f"     –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {post['views']}, CTR: {post['ctr']}%")


async def get_group_analytics_example():
    """–ü—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ –≥—Ä—É–ø–ø–µ"""
    async with get_session() as session:
        uow = UnitOfWork(session)
        
        group_id = -1001234567890
        days = 30
        
        analytics = await uow.post_analytics_service.get_group_analytics(group_id, days)
        
        print(f"\n=== –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≥—Ä—É–ø–ø—ã {group_id} –∑–∞ {days} –¥–Ω–µ–π ===")
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤: {analytics['posts_count']}")
        print(f"–í—Å–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {analytics['total_views']}")
        print(f"–í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤: {analytics['total_clicks']}")
        print(f"–í—Å–µ–≥–æ —Ä–µ–ø–æ—Å—Ç–æ–≤: {analytics['total_shares']}")
        print(f"–†–µ–∞–∫—Ü–∏–∏: {analytics['total_reactions']}")
        print(f"–°—Ä–µ–¥–Ω–∏–π CTR: {analytics['average_ctr']}%")
        print(f"–°—Ä–µ–¥–Ω—è—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: {analytics['average_engagement']}%")


async def get_popular_reactions_example():
    """–ü—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏–π"""
    async with get_session() as session:
        uow = UnitOfWork(session)
        
        reactions = await uow.post_analytics_service.get_popular_reactions(days=30)
        
        print(f"\n=== –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ –∑–∞ 30 –¥–Ω–µ–π ===")
        for reaction, count in reactions.items():
            print(f"  {reaction}: {count}")


async def create_test_post_with_analytics():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π"""
    async with get_session() as session:
        uow = UnitOfWork(session)
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
        post_data = {
            "title": "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏",
            "content": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏",
            "status": PostStatus.PUBLISHED,
            "published_at": datetime.now()
        }
        
        post = await uow.admin_post_service.create_post(post_data)
        print(f"–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å ID: {post.id}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        group_ids = [-1001234567890, -1001234567891, -1001234567892]
        
        for group_id in group_ids:
            # –ü—Ä–æ—Å–º–æ—Ç—Ä—ã
            for _ in range(100 + group_id % 50):  # –†–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
                await uow.post_analytics_service.track_view(post.id, group_id)
            
            # –ö–ª–∏–∫–∏
            for _ in range(10 + group_id % 10):
                await uow.post_analytics_service.track_click(post.id, group_id)
            
            # –†–µ–ø–æ—Å—Ç—ã
            for _ in range(2 + group_id % 3):
                await uow.post_analytics_service.track_share(post.id, group_id)
            
            # –†–µ–∞–∫—Ü–∏–∏
            reactions = ["üëç", "‚ù§Ô∏è", "üòÇ", "üòÆ", "üò¢", "üò°"]
            for reaction in reactions:
                for _ in range(group_id % 5 + 1):
                    await uow.post_analytics_service.track_reaction(post.id, group_id, reaction)
        
        await uow.commit()
        print(f"–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–ª—è –ø–æ—Å—Ç–∞ {post.id} —Å–æ–∑–¥–∞–Ω–∞")
        
        return post.id


async def telegram_bot_integration_example():
    """–ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram –±–æ—Ç–æ–º"""
    print("\n=== –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram –±–æ—Ç–æ–º ===")
    print("""
# –í –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞
from aiogram import types
from database import get_session
from database.unit_of_work import UnitOfWork

@dp.message_handler(commands=['post_stats'])
async def post_stats_handler(message: types.Message):
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å—Ç–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    try:
        post_id = int(message.get_args())
    except (ValueError, TypeError):
        await message.reply("–£–∫–∞–∂–∏—Ç–µ ID –ø–æ—Å—Ç–∞: /post_stats 123")
        return
    
    async with get_session() as session:
        uow = UnitOfWork(session)
        
        # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
        analytics = await uow.post_analytics_service.get_post_analytics(post_id)
        
        if not analytics or analytics['total_views'] == 0:
            await message.reply(f"–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–ª—è –ø–æ—Å—Ç–∞ {post_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        text = f"üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Å—Ç–∞ {post_id}:\n\n"
        text += f"üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {analytics['total_views']}\n"
        text += f"üëÜ –ö–ª–∏–∫–∏: {analytics['total_clicks']}\n"
        text += f"üì§ –†–µ–ø–æ—Å—Ç—ã: {analytics['total_shares']}\n"
        text += f"üìà CTR: {analytics['average_ctr']}%\n"
        text += f"üí´ –í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: {analytics['average_engagement']}%\n"
        text += f"üì± –ì—Ä—É–ø–ø: {analytics['groups_count']}"
        
        await message.reply(text)

# –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
@dp.callback_query_handler(lambda c: c.data.startswith('post_'))
async def post_interaction_handler(callback_query: types.CallbackQuery):
    post_id = int(callback_query.data.split('_')[1])
    group_id = callback_query.message.chat.id
    
    async with get_session() as session:
        uow = UnitOfWork(session)
        
        # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∫–ª–∏–∫
        await uow.post_analytics_service.track_click(post_id, group_id)
        await uow.commit()
    
    await callback_query.answer("–ö–ª–∏–∫ –æ—Ç—Å–ª–µ–∂–µ–Ω!")
    """)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏"""
    print("=== –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è PostAnalyticsService ===")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π
    post_id = await create_test_post_with_analytics()
    
    # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    await track_post_interactions()
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–æ –ø–æ—Å—Ç—É
    await get_post_analytics_example()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    await get_analytics_summary_example()
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–æ –≥—Ä—É–ø–ø–µ
    await get_group_analytics_example()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏
    await get_popular_reactions_example()
    
    # –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –±–æ—Ç–æ–º
    await telegram_bot_integration_example()


if __name__ == "__main__":
    asyncio.run(main())