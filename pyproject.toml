[project]
name = "tmb"
version = "0.1.0"
description = "Add your description here"
requires-python = ">=3.12"
dependencies = [
    "aiogram==3.4.1",
    "aiogram-i18n==1.4.0",
    "alembic==1.13.1",
    "apscheduler>=3.11.0",
    "asyncpg==0.29.0",
    "fastapi==0.108.0",
    "fluent-runtime>=0.4.0",
    "loguru==0.7.2",
    "multicolorcaptcha>=1.2.0",
    "pillow==10.2.0",
    "psycopg2-binary>=2.9.10",
    "pydantic==2.5.2",
    "pydantic-settings==2.1.0",
    "python-dateutil==2.8.2",
    "python-multipart==0.0.6",
    "redis==5.0.1",
    "sqlalchemy==2.0.25",
    "uvicorn==0.25.0",
]

[dependency-groups]
dev = [
    "flake8==7.0.0",
    "mypy==1.8.0",
    "pytest==7.4.4",
    "pytest-asyncio==0.23.2",
    "pytest-mock==3.12.0",
    "ruff>=0.12.1",
]

# =====================================
# RUFF –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
# =====================================

[tool.ruff]
# –î–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å black)
line-length = 88
# –¶–µ–ª–µ–≤–∞—è –≤–µ—Ä—Å–∏—è Python
target-version = "py312"
# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å first-party –∫–æ–¥–æ–º
src = ["tmb"]

# –ò—Å–∫–ª—é—á–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω—ã)
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pycache__",
    "migrations",  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è Alembic
]

[tool.ruff.lint]
# üîß –†–ê–°–®–ò–†–ï–ù–ù–´–ô –ù–ê–ë–û–† –ü–†–ê–í–ò–õ (–æ–±—ä–µ–¥–∏–Ω–∏–ª–∏ VS Code + pyproject.toml)
select = [
    "F",   # pyflakes (–æ—à–∏–±–∫–∏ –∏–º–ø–æ—Ä—Ç–∞, –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)
    "E",   # pycodestyle errors (PEP 8 –æ—à–∏–±–∫–∏)
    "W",   # pycodestyle warnings (PEP 8 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è)
    "I",   # isort (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤)
    "UP",  # pyupgrade (—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π Python —Å–∏–Ω—Ç–∞–∫—Å–∏—Å)
    "N",   # pep8-naming (—Å–æ–≥–ª–∞—à–µ–Ω–∏—è –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è)
    "C90", # mccabe (—Å–ª–æ–∂–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–π)
    "B",   # flake8-bugbear (–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –±–∞–≥–∏)
    "A",   # flake8-builtins (–∑–∞—Ç–µ–Ω–µ–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π)
    "C4",  # flake8-comprehensions (—É–ª—É—á—à–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤)
    "T20", # flake8-print (–æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ print)
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:
    "SIM", # flake8-simplify (—É–ø—Ä–æ—â–µ–Ω–∏–µ –∫–æ–¥–∞)
    "RET", # flake8-return (—É–ª—É—á—à–µ–Ω–∏–µ return)
    "ARG", # flake8-unused-arguments (–Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã)
]

# –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ –ø—Ä–∞–≤–∏–ª–∞
ignore = [
    "E501",   # line too long (ruff formatter —Å–ø—Ä–∞–≤–∏—Ç—Å—è)
    "T201",   # print found (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ print –¥–ª—è –¥–µ–±–∞–≥–∞)
    "B008",   # do not perform function calls in argument defaults (–¥–ª—è FastAPI –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)
    "RET504", # unnecessary variable assignment before return (–∏–Ω–æ–≥–¥–∞ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏)
]

# üîß –î–û–ë–ê–í–õ–ï–ù–û: preview —Ä–µ–∂–∏–º –¥–ª—è –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
preview = true

# –ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
fixable = [
    "F401", # —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
    "I",    # —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
    "UP",   # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    "C4",   # —É–ø—Ä–æ—â–µ–Ω–∏–µ comprehensions
    "SIM",  # —É–ø—Ä–æ—â–µ–Ω–∏–µ –∫–æ–¥–∞
    "RET",  # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ return
]

# –ü—Ä–∞–≤–∏–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ª—å–∑—è –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª—è—Ç—å
unfixable = [
    "B",    # –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –±–∞–≥–∏ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –≤—Ä—É—á–Ω—É—é
    "ARG",  # –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
]

[tool.ruff.lint.isort]
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤
known-first-party = ["tmb"]
force-single-line = false
lines-after-imports = 2
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.mccabe]
# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–π
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤
"__init__.py" = ["F401"]  # —Ä–∞–∑—Ä–µ—à–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã –≤ __init__.py
"tests/**/*.py" = ["ARG", "S101"]  # —Ä–∞–∑—Ä–µ—à–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏ assert –≤ —Ç–µ—Å—Ç–∞—Ö
"migrations/**/*.py" = ["E501", "F401"]  # –ø–æ—Å–ª–∞–±–ª–µ–Ω–∏—è –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π Alembic

[tool.ruff.format]
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
# üîß –î–û–ë–ê–í–õ–ï–ù–û: —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –≤ docstrings
docstring-code-format = true